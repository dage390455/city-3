apply plugin: 'com.android.application'
//apply plugin: 'android-apt'
android {
    def verName = "3.3.0"
    def verCode = 1
    def buildCode = 1
    def connector = '_v'
    def versionPropsFile = file('version.properties')


    signingConfigs {
        release {
            keyAlias 'sensoro'
            keyPassword 'sensoro'
            storeFile file('/Users/sensoro/Work/AppKey/sensoro.keystore')
            storePassword 'sensoro'
        }
        debug {
            keyAlias 'sensoro'
            keyPassword 'sensoro'
            storeFile file('/Users/sensoro/Work/AppKey/sensoro.keystore')
            storePassword 'sensoro'
        }
    }
    compileSdkVersion 27
    //    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.sensoro.smartcity"
        minSdkVersion 21
        //考虑到vcamera库只能在23以下
        targetSdkVersion 21
        versionCode verCode
        versionName verName + connector + buildCode
//         Enabling multidex support.
        multiDexEnabled true
        flavorDimensions "default"
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [
                GETUI_APP_ID    : "2VjnktTwteAnEZ1aMZCB53",
                GETUI_APP_KEY   : "zrfWS690Dh7r9bPUUfh1o2",
                GETUI_APP_SECRET: "fN5extdlmHA5NDbdKPkP6A",
                //TODO 测试版/正式版 使用其中一个
                APP_ICON        : "@mipmap/ic_launcher_beta",
                APP_ROUND_ICON  : "@mipmap/ic_launcher_beta_round"
                //
//                APP_ICON        : "@mipmap/ic_launcher",
//                APP_ROUND_ICON  : "@mipmap/ic_launcher_round"

        ]

        ndk {
//            moduleName "city"
            //声明启用Android日志, 在c/c++的源文件中使用的#include <android/log.h> 日志将得到输出
//            ldLibs "log"
//            abiFilters 'armeabi','armeabi-v7a'  //只生成armeabi的so
            abiFilters 'armeabi-v7a'  //只生成armeabi的so
        }

//        jackOptions {
//            enabled true
//        }
//        gradle.projectsEvaluated {
//            tasks.withType(JavaCompile) {
//                options.compilerArgs << "-Xbootclasspath/a:" + System.properties.get("java.home") + "/lib/rt.jar"
//            }
//        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
//            manifestPlaceholders = [
//                    GETUI_APP_ID    : "2VjnktTwteAnEZ1aMZCB53",
//                    GETUI_APP_KEY   : "zrfWS690Dh7r9bPUUfh1o2",
//                    GETUI_APP_SECRET: "fN5extdlmHA5NDbdKPkP6A",
//                    APP_ICON        : "@mipmap/ic_launcher_beta",
//                    APP_ROUND_ICON  : "@mipmap/ic_launcher_beta_round"
//
//            ]
        }
        release {
            minifyEnabled false
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
//            manifestPlaceholders = [
//                    GETUI_APP_ID    : "2VjnktTwteAnEZ1aMZCB53",
//                    GETUI_APP_KEY   : "zrfWS690Dh7r9bPUUfh1o2",
//                    GETUI_APP_SECRET: "fN5extdlmHA5NDbdKPkP6A",
//                    APP_ICON        : "@mipmap/ic_launcher",
//                    APP_ROUND_ICON  : "@mipmap/ic_launcher_round"
//
//            ]
        }
    }
    dexOptions {

//        preDexLibrarOpies = false
//        additionalParameters=['--core-library']
    }
    android {
        lintOptions {
            abortOnError false
            disable 'InvalidPackage'
        }

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
            exclude ''
            doNotStrip '*/mips/*.so'
            doNotStrip '*/mips64/*.so'
            doNotStrip '*/x86/*.so'
            doNotStrip '*/x86_64/*.so'
        }
    }

    // 多渠道打包
    productFlavors {
        SensoroCity {}
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [AVOS_CHANNEL_VALUE: name]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }

    }

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        buildCode = versionProps['BUILD_CODE'].toInteger()
        verCode = versionProps['VERSION_CODE'].toInteger()

        def runTasks = gradle.startParameter.taskNames


        for (int i = 0; i < runTasks.size(); i++) {
            println runTasks[i]
        }

        if (':app:assembleBaiDuDebug' in runTasks) {
            buildCode++
        }

        if ('build' in runTasks) {
            verCode++
            buildCode++
            android.applicationVariants.all { variant ->

                // 更新至Android Studio 3.3 gradle 4.10.1
                variant.outputs.all {
                    outputFileName = "SensorCity-${variant.versionName}-${releaseTime()}.apk"
                }

                //更新前
                /*
                android.applicationVariants.all { variant ->
//                def file = variant.outputs[0].outputFile
//                variant.outputs[0].outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
//            }
                */
            }
//
        }

        versionProps['BUILD_CODE'] = buildCode.toString()
        versionProps['VERSION_CODE'] = verCode.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        defaultConfig {
            versionCode = verCode
            versionName verName + connector + buildCode
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //
    implementation 'com.android.support:design:27.1.1'
    //    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha9'
    //
    //    compile 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    //    compile project(':cosmocalendar')
    implementation files('libs/Baidu_Mtj_3.8.2.1.jar')
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.android.support:multidex:1.0.3'
    //    compile 'com.squareup.okio:okio:1.5.0'
    testImplementation 'junit:junit:4.12'
    //    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.1.2'
    //    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    //
    implementation files('libs/GetuiSDK2.12.4.0.jar')
    //  更改扫描二维码为maven库
    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.3.6'
//    implementation 'cn.bingoogolapple:bga-qrcode-zbar:1.3.6'
    //
    //    compile project(':imagepicker')
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.qiniu:qiniu-android-sdk:7.3.+'
    implementation files('libs/ocr-sdk.jar')
    implementation project(':ocr_ui')
    implementation 'me.jessyan:autosize:1.1.2'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //网络组件
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //消息组件
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-14'
    implementation files('libs/AMap3DMap_6.4.1_AMapSearch_6.1.0_AMapLocation_4.2.0_20180906.jar')
    implementation project(':sensor-kit')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //    compile 'com.gyf.immersionbar:immersionbar:2.3.2-beta01'
    //protobuf
    implementation 'com.google.protobuf:protobuf-java:2.5.0'
    implementation 'no.nordicsemi.android:dfu:1.0.0'
    implementation 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'
    implementation('com.gyf.immersionbar:immersionbar:2.3.2-beta01') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    //bottom bar
    implementation project(':bottomnavigation')
    //Calendar view
    implementation project(':calendarview')
    implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:5.5.3') {
        transitive = true
    }
    implementation project(path: ':pickerview')
    implementation 'com.yanzhenjie:permission:2.0.0-rc12'
    //    compile 'com.hjq:toast:5.2'
    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'
    api(project(':simplescanner')) {
        exclude group: "com.amap.api"
    }
}
//获取编译时间
static def releaseTime() {
    return new Date().format("MM-dd hh:mm:ss", TimeZone.getTimeZone("UTC"))
}
